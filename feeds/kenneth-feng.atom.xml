<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Log@tomic</title><link href="/" rel="alternate"></link><link href="/feeds/kenneth-feng.atom.xml" rel="self"></link><id>/</id><updated>2014-08-12T23:14:00-04:00</updated><entry><title>Dynamically Create Javascript Classes</title><link href="/dynamically-create-javascript-classes.html" rel="alternate"></link><updated>2014-08-12T23:14:00-04:00</updated><author><name>Kenneth Feng</name></author><id>tag:,2014-08-12:dynamically-create-javascript-classes.html</id><summary type="html">&lt;h4&gt;Problem&lt;/h4&gt;
&lt;p&gt;Recently, I was asked to think of a way to dynamically create classes, which have static methods that are slightly different among dynamically created classes.&lt;/p&gt;
&lt;h4&gt;Solution&lt;/h4&gt;
&lt;script src="https://gist.github.com/kennethzfeng/c9d65c3b736c787414b5.js"&gt;&lt;/script&gt;

&lt;p&gt;I used a factory-like function to generate class with a static method that closes on the parameter &lt;em&gt;name&lt;/em&gt;.&lt;/p&gt;</summary><category term="javascript"></category></entry><entry><title>This is my first Python post</title><link href="/this-is-my-first-python-post.html" rel="alternate"></link><updated>2013-11-28T16:12:00-05:00</updated><author><name>Kenneth Feng</name></author><id>tag:,2013-11-28:this-is-my-first-python-post.html</id><summary type="html">&lt;p&gt;This is the content of my first blog post.&lt;/p&gt;</summary><category term="IPython"></category><category term="pandas"></category></entry></feed>